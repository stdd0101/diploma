version: '3'
services:
  app:
    container_name: ${APP_NAME}-app
    build:
      context: ./
      dockerfile: Dockerfile
    image: filestorage-app:latest
    ports:
      - 8081:8080
    depends_on:
      - postgresql
      - minio

  postgresql:
    container_name: ${APP_NAME}-postgresql
    image: postgres:10.10
    restart: always
    ports:
      - 5435:5435
    environment:
      - TZ="UTC"
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    command: postgres ${DB_PARAMS}
    volumes:
      - ${APP_NAME}-db:/var/lib/postgresql/data

  minio:
    container_name: ${APP_NAME}-minio
    image: minio/minio
    restart: always
    ports:
      - 9900:9000
    volumes:
      - ${APP_NAME}-minio:/data
    environment:
      - "MINIO_ACCESS_KEY=${S3_ACCESS_KEY}"
      - "MINIO_SECRET_KEY=${S3_SECRET_KEY}"
    entrypoint: sh
    command: -c 'mkdir -p /data/${APP_NAME}-pub && /usr/bin/minio server /data'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9900/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3

  minio-mc:
    container_name: ${APP_NAME}_minio-mc
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "set -eux; sleep 2;
      /usr/bin/mc config host add appminio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb appminio/${S3_BUCKET};
      /usr/bin/mc policy set public appminio/${S3_BUCKET};"

volumes:
  filestorage-db:
  filestorage-minio: